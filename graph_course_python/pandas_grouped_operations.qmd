## Imports


```{python}
import pandas as pd
import vega_datasets as vd
import plotly.express as px
import warnings
import calendar
```

## Data

```{python}
weather_raw = vd.data.seattle_weather()

weather = weather_raw.query("date.dt.year == 2012")

weather["month"] = pd.Categorical(
    weather["date"].dt.strftime("%B"),
    categories = list(calendar.month_name[1:]),
    ordered = True
)

weather
```

##Adding summary statistics with transform()


```{python}
weather.groupby("month").agg(mean_precip = ("precipitation", "mean"))
```

```{python}
weather["mean_precip_month"] = weather.groupby("month")["precipitation"].transform("mean")

weather
```

```{python}
weather["median_precip_month"] = weather.groupby("month")["precipitation"].transform("median")

weather
```

```{python}
weather["sum_precip_month"] = weather.groupby("month")["precipitation"].transform("sum")

weather
```

```{python}
weather["precip_month_perc"] = 100 * weather["precipitation"] / weather["sum_precip_month"]

weather
```

## Practice Q:

Using the 'tips' dataset, calculate:
1. A new column 'daily_total_tips' containing the total tips for each day
2. A new column 'tip_proportion' showing what proportion of that dayÂ´s total tips came from each custumer.

```{python}
tips = px.data.tips()
tips
```

```{python}
tips["daily_total_tips"] = tips.groupby("day")["tip"].transform("sum")

tips
```

```{python}
tips["tip_proportion"] = tips["tip"] / tips["daily_total_tips"]

tips
```

```{python}
weather = weather[["date", "month", "precipitation", "wind", "weather"]]
```

## Counting values withing groups using value_counts()

```{python}
weather["weather"].value_counts()
```

```{python}
weather["weather"].value_counts(normalize = True)
```

Grouped version

```{python}
weather.groupby("month")["weather"].value_counts().reset_index()
```

```{python}
weather.groupby("month")["weather"].value_counts(normalize = True).reset_index()
```

## Practice Q:

Using the 'tips' dataset, count the number of smokers and non-smokers for each day

```{python}
tips = px.data.tips()
tips
```

```{python}
tips.groupby("day")["smoker"].value_counts().reset_index()
```

## Cumulative sum

```{python}
# cumulative rain per month in the weather ataset
weather["precipitation"].cumsum()
```

```{python}
weather["precip_cumul"] = weather.groupby("month")["precipitation"].cumsum()
weather
```

## Practice Q: Cumulative Tip Amount by Day

Compute the cumulative sum of 'total_bill' for each 'day', adding a new column 'cumul_total_bill_day'. Then add another column 'culum_tip_day' that contains the cumulative sum of 'tip' for each 'day'. 
```{python}
tips = px.data.tips()
tips = tips.sort_values("day")
tips
```

```{python}
tips["cumul_total_bill_day"] = tips.groupby("day")["total_bill"].cumsum()
tips
```

```{python}
tips["culum_tip_day"] = tips.groupby("day")["tip"].cumsum()
tips
```



